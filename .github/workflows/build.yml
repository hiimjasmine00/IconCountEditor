name: Build Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - '**'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Windows
            os: windows-latest
            id: win

          - name: macOS
            os: macos-latest
            id: mac
            args: '"-DCMAKE_OSX_ARCHITECTURES=arm64;x86_64"'

          - name: Android (32-bit)
            os: ubuntu-latest
            id: android32
            args: '-DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_ABI=armeabi-v7a -DANDROID_PLATFORM=android-23'

          - name: Android (64-bit)
            os: ubuntu-latest
            id: android64
            args: '-DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake -DANDROID_ABI=arm64-v8a -DANDROID_PLATFORM=android-23'

          - name: iOS
            os: macos-latest
            id: ios
            args: '-DCMAKE_SYSTEM_NAME=iOS'

    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout bindings
        uses: actions/checkout@v4
        with:
          repository: geode-sdk/bindings
          ref: main
          path: bindings

      - name: Checkout geode
        uses: actions/checkout@v4
        with:
          repository: geode-sdk/geode
          ref: v4.5.0
          path: geode

      - name: Set variables
        shell: bash
        run: |
          echo "GEODE_SDK=${{ github.workspace }}/geode" >> $GITHUB_ENV
          echo "GEODE_BINDINGS_REPO_PATH=${{ github.workspace }}/bindings" >> $GITHUB_ENV

      - name: Configure and Build
        shell: bash
        run: |
          export CPM_SOURCE_CACHE="${{ github.workspace }}/cpm-cache"
          mkdir build
          cmake -B build -G Ninja -DCMAKE_BUILD_TYPE=Release -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ ${{ matrix.config.args }}
          cmake --build build --config Release
